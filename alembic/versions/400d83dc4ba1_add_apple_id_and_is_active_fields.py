"""add apple_id and is_active fields

Revision ID: 400d83dc4ba1
Revises: 613b685e397e
Create Date: 2025-10-12 09:59:46.877560

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '400d83dc4ba1'
down_revision: Union[str, Sequence[str], None] = '613b685e397e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('apple_id', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_unique_constraint(None, 'users', ['apple_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'apple_id')
    # ### end Alembic commands ###
